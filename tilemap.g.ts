// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . 2 . . . 2 . . 2 
2 . . . . . . . 2 . . . 2 . . 2 
2 2 2 . . 2 . . . . . . 2 . . 2 
2 . 2 . . 2 . . . . . 2 2 . . 2 
2 . 2 . . 2 2 2 2 . . . 2 . . 2 
2 . 2 . . . . . 2 . . . 2 . . 2 
2 . 2 . . . . . 2 . . . 2 . . 2 
2 . 2 . . . . . 2 . . . 2 . . 2 
2 . 2 2 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . . . . 2 
2 . . . 2 . . . 2 . . . . . . 2 
2 . . . . . . 2 2 2 2 2 2 . . 2 
2 . . . . . . . . . . . 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.chestClosed,sprites.castle.tilePath5,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex`1000100005050505050505080808070d080808080505050d080805080807080d080808080508080d080808080708080d080808080508080d0d0d0d0808080808080d0d080508080808080d0d0d08070806060d08050808080808080808080708060e0d080d0808080808080808080d08060d0d080d080d0d0808080808080d08080d0d080d080d0d0d08080808080d08080d0d080708080d0603060608080d08080d0d0807080808060606060d0d0d0d08080d0805050508080806060808080d08080d080b08080808080608080808010d080d080b0b0c0808080608080808080d080d080b0c0a0808080f08080808080d080d08090a080808080808080808040d080d02`, img`
2 2 2 2 2 2 2 . . . 2 2 . . . . 
2 2 2 2 . . 2 . . 2 . 2 . . . . 
2 . . 2 . . . . 2 . . 2 . . . . 
2 . . 2 2 2 2 . . . . . . 2 2 . 
2 . . . . . 2 2 2 . 2 . 2 2 2 . 
2 . . . . . . . . . 2 . 2 . . . 
2 . . . . . . . . . 2 . 2 2 2 . 
2 . 2 2 . . . . . . 2 . . 2 2 . 
2 . 2 2 2 . . . . . 2 . . 2 2 . 
2 . . 2 2 . 2 2 . . 2 . . 2 2 . 
2 . . . 2 2 2 2 2 2 2 2 . . 2 . 
2 2 2 . . . 2 2 2 . . 2 . . 2 . 
. . . . . . 2 . . . . . 2 . 2 . 
. . . . . . 2 . . . . . 2 . 2 . 
. . . . . . . . . . . . 2 . 2 . 
. . . . . . . . . . . . 2 . 2 . 
`, [myTiles.transparency16,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleInsignia,sprites.dungeon.darkGroundEast,sprites.dungeon.chestOpen,sprites.dungeon.floorLight1,sprites.dungeon.doorLockedWest,sprites.dungeon.floorDarkDiamond,sprites.dungeon.darkGroundCenter,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.floorLight0,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.greenSwitchDown], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
